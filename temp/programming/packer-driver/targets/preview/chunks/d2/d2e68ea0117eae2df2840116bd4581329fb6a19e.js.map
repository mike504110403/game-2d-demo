{"version":3,"sources":["file:///Users/mike/Documents/self/game-2d-demo/assets/scripts/managers/SceneManager.ts"],"names":["ccclass","property","cc","_decorator","SceneManager","Component","sceneConfigs","name","type","spawnPoint","v2","level","description","teleportConfigs","from","to","fromPos","toPos","requirements","items","onLoad","initializeSceneManager","start","setupCurrentScene","console","log","loadPlayerData","sceneConfig","currentScene","savedData","sys","localStorage","getItem","playerData","JSON","parse","experience","position","inventory","stats","health","mana","attack","defense","savePlayerData","setItem","stringify","teleportToScene","sceneName","error","targetPosition","checkTeleportRequirements","teleportHistory","push","length","shift","director","loadScene","onSceneLoaded","setPlayerPosition","showSceneInfo","player","find","setPosition","x","y","createTeleportPoint","portalName","teleportNode","Node","teleportPortal","addComponent","getSceneConfig","getAvailableScenes","Object","keys","isSceneAvailable","getTeleportHistory","goBackToPreviousScene","previousScene","pop","updatePlayerData","data","getPlayerData","resetPlayerData","getCurrentScene","getCurrentSceneConfig"],"mappings":"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","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n/**\n * 場景管理器\n * 處理楓之谷風格的地圖切換和傳送系統\n */\n@ccclass('SceneManager')\nexport class SceneManager extends cc.Component {\n    @property\n    currentScene: string = 'GamePlay';\n\n    @property\n    playerData: any = null;\n\n    @property\n    teleportHistory: string[] = [];\n\n    // 場景配置\n    private sceneConfigs = {\n        'GamePlay': {\n            name: '新手村',\n            type: 'village',\n            spawnPoint: cc.v2(0, 0),\n            level: 1,\n            description: '新手冒險者的起點'\n        },\n        'ForestMap': {\n            name: '神秘森林',\n            type: 'forest',\n            spawnPoint: cc.v2(0, 0),\n            level: 5,\n            description: '充滿魔法的神秘森林'\n        }\n    };\n\n    // 傳送點配置\n    private teleportConfigs = {\n        'village_to_forest': {\n            from: 'GamePlay',\n            to: 'ForestMap',\n            fromPos: cc.v2(800, -200),\n            toPos: cc.v2(-800, -200),\n            requirements: {\n                level: 1,\n                items: []\n            }\n        },\n        'forest_to_village': {\n            from: 'ForestMap',\n            to: 'GamePlay',\n            fromPos: cc.v2(-800, -200),\n            toPos: cc.v2(800, -200),\n            requirements: {\n                level: 1,\n                items: []\n            }\n        }\n    };\n\n    onLoad() {\n        this.initializeSceneManager();\n    }\n\n    start() {\n        this.setupCurrentScene();\n    }\n\n    /**\n     * 初始化場景管理器\n     */\n    private initializeSceneManager(): void {\n        console.log('場景管理器初始化完成');\n        this.loadPlayerData();\n    }\n\n    /**\n     * 設定當前場景\n     */\n    private setupCurrentScene(): void {\n        const sceneConfig = this.sceneConfigs[this.currentScene];\n        if (sceneConfig) {\n            console.log(`當前場景: ${sceneConfig.name} - ${sceneConfig.description}`);\n        }\n    }\n\n    /**\n     * 載入玩家資料\n     */\n    private loadPlayerData(): void {\n        // 從本地儲存載入玩家資料\n        const savedData = cc.sys.localStorage.getItem('playerData');\n        if (savedData) {\n            this.playerData = JSON.parse(savedData);\n        } else {\n            // 建立預設玩家資料\n            this.playerData = {\n                level: 1,\n                experience: 0,\n                position: cc.v2(0, 0),\n                inventory: [],\n                stats: {\n                    health: 100,\n                    mana: 50,\n                    attack: 10,\n                    defense: 5\n                }\n            };\n        }\n    }\n\n    /**\n     * 儲存玩家資料\n     */\n    private savePlayerData(): void {\n        cc.sys.localStorage.setItem('playerData', JSON.stringify(this.playerData));\n    }\n\n    /**\n     * 傳送到指定場景\n     */\n    public teleportToScene(sceneName: string, position?: cc.Vec2): void {\n        if (!this.sceneConfigs[sceneName]) {\n            console.error(`場景 ${sceneName} 不存在`);\n            return;\n        }\n\n        const sceneConfig = this.sceneConfigs[sceneName];\n        const targetPosition = position || sceneConfig.spawnPoint;\n\n        // 檢查傳送條件\n        if (!this.checkTeleportRequirements(sceneName)) {\n            return;\n        }\n\n        // 更新玩家位置\n        this.playerData.position = targetPosition;\n        this.savePlayerData();\n\n        // 記錄傳送歷史\n        this.teleportHistory.push(this.currentScene);\n        if (this.teleportHistory.length > 10) {\n            this.teleportHistory.shift();\n        }\n\n        console.log(`傳送到場景: ${sceneConfig.name}`);\n        \n        // 載入場景\n        cc.director.loadScene(sceneName, () => {\n            this.currentScene = sceneName;\n            this.onSceneLoaded(sceneName, targetPosition);\n        });\n    }\n\n    /**\n     * 檢查傳送條件\n     */\n    private checkTeleportRequirements(sceneName: string): boolean {\n        const sceneConfig = this.sceneConfigs[sceneName];\n        \n        // 檢查等級要求\n        if (this.playerData.level < sceneConfig.level) {\n            console.log(`需要等級 ${sceneConfig.level} 才能進入 ${sceneConfig.name}`);\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * 場景載入完成\n     */\n    private onSceneLoaded(sceneName: string, position: cc.Vec2): void {\n        console.log(`場景 ${sceneName} 載入完成`);\n        \n        // 設定玩家位置\n        this.setPlayerPosition(position);\n        \n        // 顯示場景資訊\n        this.showSceneInfo(sceneName);\n    }\n\n    /**\n     * 設定玩家位置\n     */\n    private setPlayerPosition(position: cc.Vec2): void {\n        const player = cc.find('PlayerLayer/Player');\n        if (player) {\n            player.setPosition(position);\n            console.log(`玩家位置設定為: ${position.x}, ${position.y}`);\n        }\n    }\n\n    /**\n     * 顯示場景資訊\n     */\n    private showSceneInfo(sceneName: string): void {\n        const sceneConfig = this.sceneConfigs[sceneName];\n        console.log(`=== ${sceneConfig.name} ===`);\n        console.log(`描述: ${sceneConfig.description}`);\n        console.log(`推薦等級: ${sceneConfig.level}`);\n    }\n\n    /**\n     * 建立傳送點\n     */\n    public createTeleportPoint(sceneName: string, position: cc.Vec2, portalName: string): cc.Node {\n        const teleportNode = new cc.Node(portalName);\n        \n        // 添加傳送門組件\n        const teleportPortal = teleportNode.addComponent(cc.Component);\n        // 這裡需要導入 TeleportPortal 類別\n        \n        // 設定傳送目標\n        // teleportPortal.setTarget(sceneName, position);\n        // teleportPortal.setPortalName(portalName);\n        \n        teleportNode.setPosition(position);\n        \n        return teleportNode;\n    }\n\n    /**\n     * 獲取場景配置\n     */\n    public getSceneConfig(sceneName: string): any {\n        return this.sceneConfigs[sceneName];\n    }\n\n    /**\n     * 獲取所有可用場景\n     */\n    public getAvailableScenes(): string[] {\n        return Object.keys(this.sceneConfigs);\n    }\n\n    /**\n     * 檢查場景是否可用\n     */\n    public isSceneAvailable(sceneName: string): boolean {\n        const sceneConfig = this.sceneConfigs[sceneName];\n        if (!sceneConfig) return false;\n        \n        return this.playerData.level >= sceneConfig.level;\n    }\n\n    /**\n     * 獲取傳送歷史\n     */\n    public getTeleportHistory(): string[] {\n        return this.teleportHistory;\n    }\n\n    /**\n     * 返回上一個場景\n     */\n    public goBackToPreviousScene(): void {\n        if (this.teleportHistory.length > 0) {\n            const previousScene = this.teleportHistory.pop();\n            this.teleportToScene(previousScene);\n        }\n    }\n\n    /**\n     * 更新玩家資料\n     */\n    public updatePlayerData(data: any): void {\n        this.playerData = { ...this.playerData, ...data };\n        this.savePlayerData();\n    }\n\n    /**\n     * 獲取玩家資料\n     */\n    public getPlayerData(): any {\n        return this.playerData;\n    }\n\n    /**\n     * 重置玩家資料\n     */\n    public resetPlayerData(): void {\n        this.playerData = {\n            level: 1,\n            experience: 0,\n            position: cc.v2(0, 0),\n            inventory: [],\n            stats: {\n                health: 100,\n                mana: 50,\n                attack: 10,\n                defense: 5\n            }\n        };\n        this.savePlayerData();\n    }\n\n    /**\n     * 獲取當前場景\n     */\n    public getCurrentScene(): string {\n        return this.currentScene;\n    }\n\n    /**\n     * 獲取當前場景配置\n     */\n    public getCurrentSceneConfig(): any {\n        return this.sceneConfigs[this.currentScene];\n    }\n}\n"]}