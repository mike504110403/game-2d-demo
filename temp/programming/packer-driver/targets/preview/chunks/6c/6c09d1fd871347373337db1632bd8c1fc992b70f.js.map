{"version":3,"sources":["file:///Users/mike/Documents/self/game-2d-demo/assets/scripts/components/ParallaxBackground.ts"],"names":["ccclass","property","cc","_decorator","ParallaxBackground","Node","Component","layers","initialPositions","onLoad","initializeLayers","start","target","find","update","deltaTime","length","updateParallax","i","node","children","child","push","position","clone","console","log","targetX","x","layer","speed","layerSpeed","offset","layerOffset","parallaxX","parallaxSpeed","setPosition","y","setTarget","setParallaxSpeed","setLayerSpeed","speeds","resetPositions"],"mappings":"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","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n/**\n * 視差滾動背景組件\n * 實現楓之谷風格的多層背景視差效果\n */\n@ccclass('ParallaxBackground')\nexport class ParallaxBackground extends cc.Component {\n    @property(cc.Node)\n    target: cc.Node = null;\n\n    @property\n    parallaxSpeed: number = 0.5;\n\n    @property\n    layerSpeed: number[] = [0.1, 0.3, 0.6, 1.0];\n\n    @property\n    layerOffset: number[] = [0, 0, 0, 0];\n\n    private layers: cc.Node[] = [];\n    private initialPositions: cc.Vec3[] = [];\n\n    onLoad() {\n        this.initializeLayers();\n    }\n\n    start() {\n        if (!this.target) {\n            // 嘗試找到玩家節點\n            this.target = cc.find('PlayerLayer/Player');\n        }\n    }\n\n    update(deltaTime: number) {\n        if (this.target && this.layers.length > 0) {\n            this.updateParallax();\n        }\n    }\n\n    /**\n     * 初始化背景層\n     */\n    private initializeLayers(): void {\n        this.layers = [];\n        this.initialPositions = [];\n\n        // 收集所有子節點作為背景層\n        for (let i = 0; i < this.node.children.length; i++) {\n            const child = this.node.children[i];\n            this.layers.push(child);\n            this.initialPositions.push(child.position.clone());\n        }\n\n        console.log(`視差背景初始化完成，共 ${this.layers.length} 層`);\n    }\n\n    /**\n     * 更新視差效果\n     */\n    private updateParallax(): void {\n        const targetX = this.target.position.x;\n        \n        for (let i = 0; i < this.layers.length; i++) {\n            const layer = this.layers[i];\n            const speed = this.layerSpeed[i] || 0.5;\n            const offset = this.layerOffset[i] || 0;\n            \n            // 計算視差位置\n            const parallaxX = this.initialPositions[i].x + (targetX * speed * this.parallaxSpeed) + offset;\n            \n            // 更新層位置\n            layer.setPosition(parallaxX, layer.position.y);\n        }\n    }\n\n    /**\n     * 設定目標\n     */\n    public setTarget(target: cc.Node): void {\n        this.target = target;\n    }\n\n    /**\n     * 設定視差速度\n     */\n    public setParallaxSpeed(speed: number): void {\n        this.parallaxSpeed = speed;\n    }\n\n    /**\n     * 設定層速度\n     */\n    public setLayerSpeed(speeds: number[]): void {\n        this.layerSpeed = speeds;\n    }\n\n    /**\n     * 重置背景位置\n     */\n    public resetPositions(): void {\n        for (let i = 0; i < this.layers.length; i++) {\n            this.layers[i].setPosition(this.initialPositions[i]);\n        }\n    }\n}\n"]}